The key's randomart image is:
+---[RSA 2048]----+
|                 |
|  .  E           |
|oo..o. .         |
|oBo= oo .        |
|O O.o.. S.       |
|=B +=. ..        |
|+o= o+oo.        |
|=+ + o o+o.      |
|*+. . . .=o      |
+----[SHA256]-----+

carlosrene@carlos MINGW64 ~/desktop/proyecto
$ cat ~/.ssh/id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7S40FNM4/RoR8fP9qwjKoIkHNjtmtWDmFXaF+ZGgWtVIbqWyoCqnsAShtZ+iWXfR3sXjcW0doevx9GFh7fZkEovFT9mL4n21QxK/JFcHZZFXgaGSVctcd03+gUCkL64HipmIoTdvthNuZnNoqsHr4ITxt5gqZPQaW4ovK3P/KBPUYKPbE6Y3tA1OOhGzpBdLZdgY0qREMpMWrVFnjjJnyFlT7A3ATun19EY5ot3K0hM5jsL+C4jeUUeOnrC1x6TI/65GeN06CU1Q2PEc/0KgBgl4OFsVVVLX57uwx9ifb0ImOAWYPGEEFrfLEpssjQLtXYm4tiOu49WOW3943gZU/ carlosrene@carlos

carlosrene@carlos MINGW64 ~/desktop/proyecto
$ clear

carlosrene@carlos MINGW64 ~/desktop/proyecto
$ git init
Initialized empty Git repository in C:/Users/carlosrene/Desktop/proyecto/.git/

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ touch readme2

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ git add readme2

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ git status
On branch master

Initial commit

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   readme2

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        curso-responsive-design/


carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ git commit -m "este es archivo de compu"

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'carlosrene@carlos.(none)')

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ git config --global user.email "crch29@me.com"

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ git config --global user.name "crch29"

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ git status
On branch master

Initial commit

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   readme2

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        curso-responsive-design/


carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ git remote add origin https://github.com/crch29/proyecto.git

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ git pull origin master
remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
From https://github.com/crch29/proyecto
 * branch            master     -> FETCH_HEAD
 * [new branch]      master     -> origin/master

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ git push origin master
Everything up-to-date

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ git push origin master
Everything up-to-date

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ git push origin master
Everything up-to-date

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ touch hola

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ git add hola

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ git push origin master
Everything up-to-date

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   hola
        new file:   readme2

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        curso-responsive-design/


carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ git commit -m "este"
[master a143bee] este
 2 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 hola
 create mode 100644 readme2

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ git push origin master
Counting objects: 3, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 267 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/crch29/proyecto.git
   fecce60..a143bee  master -> master

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ ls
curso-responsive-design/  hola  README.md  readme2

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ slime hola
bash: slime: command not found

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ mkdir tips

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ cd tips

carlosrene@carlos MINGW64 ~/desktop/proyecto/tips (master)
$ git init
Initialized empty Git repository in C:/Users/carlosrene/Desktop/proyecto/tips/.git/

carlosrene@carlos MINGW64 ~/desktop/proyecto/tips (master)
$ git add remote original https://github.com/crch29/tips.git
fatal: pathspec 'remote' did not match any files

carlosrene@carlos MINGW64 ~/desktop/proyecto/tips (master)
$ git remote add original https://github.com/crch29/tips.git

carlosrene@carlos MINGW64 ~/desktop/proyecto/tips (master)
$ git pull origin master
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

carlosrene@carlos MINGW64 ~/desktop/proyecto/tips (master)
$ git pull original master
remote: Counting objects: 583, done.
remote: Compressing objects: 100% (63/63), done.
remote: Total 583 (delta 41), reused 0 (delta 0), pack-reused 520
Receiving objects: 100% (583/583), 160.55 KiB | 0 bytes/s, done.
Resolving deltas: 100% (367/367), done.
From https://github.com/crch29/tips
 * branch            master     -> FETCH_HEAD
 * [new branch]      master     -> original/master

carlosrene@carlos MINGW64 ~/desktop/proyecto/tips (master)
$ touch holamundo

carlosrene@carlos MINGW64 ~/desktop/proyecto/tips (master)
$ git commit -m
error: switch `m' requires a value
usage: git commit [<options>] [--] <pathspec>...

    -q, --quiet           suppress summary after successful commit
    -v, --verbose         show diff in commit message template

Commit message options
    -F, --file <file>     read message from file
    --author <author>     override author for commit
    --date <date>         override date for commit
    -m, --message <message>
                          commit message
    -c, --reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --reuse-message <commit>
                          reuse message from specified commit
    --fixup <commit>      use autosquash formatted message to fixup specified commit
    --squash <commit>     use autosquash formatted message to squash specified commit
    --reset-author        the commit is authored by me now (used with -C/-c/--amend)
    -s, --signoff         add Signed-off-by:
    -t, --template <file>
                          use specified template file
    -e, --edit            force edit of commit
    --cleanup <default>   how to strip spaces and #comments from message
    --status              include status in commit message template
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

Commit contents options
    -a, --all             commit all changed files
    -i, --include         add specified files to index for commit
    --interactive         interactively add files
    -p, --patch           interactively add changes
    -o, --only            commit only specified files
    -n, --no-verify       bypass pre-commit hook
    --dry-run             show what would be committed
    --short               show status concisely
    --branch              show branch information
    --porcelain           machine-readable output
    --long                show status in long format (default)
    -z, --null            terminate entries with NUL
    --amend               amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    -u, --untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)


carlosrene@carlos MINGW64 ~/desktop/proyecto/tips (master)
$ git add holamundo

carlosrene@carlos MINGW64 ~/desktop/proyecto/tips (master)
$ git commit -m
error: switch `m' requires a value
usage: git commit [<options>] [--] <pathspec>...

    -q, --quiet           suppress summary after successful commit
    -v, --verbose         show diff in commit message template

Commit message options
    -F, --file <file>     read message from file
    --author <author>     override author for commit
    --date <date>         override date for commit
    -m, --message <message>
                          commit message
    -c, --reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --reuse-message <commit>
                          reuse message from specified commit
    --fixup <commit>      use autosquash formatted message to fixup specified commit
    --squash <commit>     use autosquash formatted message to squash specified commit
    --reset-author        the commit is authored by me now (used with -C/-c/--amend)
    -s, --signoff         add Signed-off-by:
    -t, --template <file>
                          use specified template file
    -e, --edit            force edit of commit
    --cleanup <default>   how to strip spaces and #comments from message
    --status              include status in commit message template
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

Commit contents options
    -a, --all             commit all changed files
    -i, --include         add specified files to index for commit
    --interactive         interactively add files
    -p, --patch           interactively add changes
    -o, --only            commit only specified files
    -n, --no-verify       bypass pre-commit hook
    --dry-run             show what would be committed
    --short               show status concisely
    --branch              show branch information
    --porcelain           machine-readable output
    --long                show status in long format (default)
    -z, --null            terminate entries with NUL
    --amend               amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    -u, --untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)


carlosrene@carlos MINGW64 ~/desktop/proyecto/tips (master)
$ git commit -m "nuevamente"
[master 1fdce02] nuevamente
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 holamundo

carlosrene@carlos MINGW64 ~/desktop/proyecto/tips (master)
$ git push original master
Counting objects: 3, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 256 bytes | 0 bytes/s, done.
Total 3 (delta 1), reused 0 (delta 0)
To https://github.com/crch29/tips.git
   d9a8859..1fdce02  master -> master

carlosrene@carlos MINGW64 ~/desktop/proyecto/tips (master)
$ cd ~/desktop/proyecto

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ mkdir sonar

carlosrene@carlos MINGW64 ~/desktop/proyecto (master)
$ cd sonar

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (master)
$ git init
Initialized empty Git repository in C:/Users/carlosrene/Desktop/proyecto/sonar/.git/

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (master)
$ git remote add https://github.com/crch29/sonar.git
usage: git remote add [<options>] <name> <url>

    -f, --fetch           fetch the remote branches
    --tags                import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --track <branch>  branch(es) to track
    -m, --master <branch>
                          master branch
    --mirror[=<push|fetch>]
                          set up remote as a mirror to push to or fetch from


carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (master)
$ git remote add original https://github.com/crch29/sonar.git

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (master)
$ git pull origin master
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (master)
$ git pull original master
remote: Counting objects: 143, done.
remote: Total 143 (delRecta 0), reused 0 (delta 0), pack-reused 143
Receiving objects: 100% (143/143), 161.90 KiB | 189.00 KiB/s, done.
Resolving deltas: 100% (45/45), done.
From https://github.com/crch29/sonar
 * branch            master     -> FETCH_HEAD
 * [new branch]      master     -> original/master

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (master)
$ touch pereza

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (master)
$ git push original master
Everything up-to-date

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (master)
$ git add pereza

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (master)
$ git commit -m "que pereza"
[master eab57f0] que pereza
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 pereza

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (master)
$ git push original master
Counting objects: 3, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 290 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/crch29/sonar.git
   b41996f..eab57f0  master -> master

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (master)
$ git branch uno

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (master)
$ git checkout uno
Switched to branch 'uno'

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (uno)
$ git status
On branch uno
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   pereza

no changes added to commit (use "git add" and/or "git commit -a")

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (uno)
$ git add pereza

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (uno)
$ git commit -m "mejora en uno"
[uno 9e65f1d] mejora en uno
 1 file changed, 1 insertion(+)

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (uno)
$ git brancn
git: 'brancn' is not a git command. See 'git --help'.

Did you mean this?
        branch
g
carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (uno)
$ git branch
  master
* uno

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (uno)
$ git push uno branch
error: src refspec branch does not match any.
error: failed to push some refs to 'uno'

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (uno)
$ git push original master
Everything up-to-date

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (uno)
$ git merge uno
Already up-to-date.

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (uno)
$ git merge original master
merge: original - not something we can merge

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (uno)
$ git merge uno
Already up-to-date.

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (uno)
$ git push original master
Everything up-to-date

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (uno)
$ git push original uno
Counting objects: 3, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 300 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/crch29/sonar.git
 * [new branch]      uno -> uno

carlosrene@carlos MINGW64 ~/desktop/proyecto/sonar (uno)
$
